// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Game {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  status      String    @default("active") // active, completed
  players     GamePlayer[]
  actions     GameAction[]
}

model GamePlayer {
  id            String   @id @default(cuid())
  gameId        String
  game          Game     @relation(fields: [gameId], references: [id])
  playerId      String   // can be 'user-1' for human or 'ai-1' for AI
  name          String
  position      Int      // player's position at the table
  startingChips Int
  actions       GameAction[]
  
  @@index([gameId])
}

model GameAction {
  id             String     @id @default(cuid())
  gameId         String
  game           Game       @relation(fields: [gameId], references: [id])
  playerId       String
  player         GamePlayer @relation(fields: [playerId], references: [id])
  actionType     String     // fold, check, call, bet, raise, all-in
  amount         Int?       // amount for bet/raise/call
  timestamp      DateTime   @default(now())
  sequenceNumber Int        // to track action order
  gameState      Json       // snapshot of game state at this action
  
  @@index([gameId])
  @@index([playerId])
}
